export interface {{&methodName}}Args {
{{#parameters}}	
	{{&camelCaseName}}{{&cardinality}}: {{> type}};
{{/parameters}}
}

export function {{&methodName}} (args: {{&methodName}}Args, options: Partial<RequestOptions>): AxiosPromise<{{#okResponse}}	{{> type}} {{/okResponse}}> {
	options = Object.assign(options, defaultOptions);
	let url = interpolate('{{&path}}', args);
	let params:any = {};
	let data:any = {};
	{{#parameters}}	
		{{#isQueryParameter}}
		params.{{&camelCaseName}} = args.{{&camelCaseName}};
		{{/isQueryParameter}}
		{{#isBodyParameter}}
		data = args.{{&camelCaseName}};
		{{/isBodyParameter}}
	{{/parameters}}	
	let config: AxiosRequestConfig = {
		method: '{{method}}',
		url: url,
		baseURL: options.baseUrl,
		headers: options.headers,
		params: params,
		data: data
	};
	return axios(config);
}